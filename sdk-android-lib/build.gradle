apply plugin: 'com.android.library'

def publishConfig = USE_LOCAL_FLAVOR == "true" ? "localRelease" : "productionRelease"

task testTmp << {
    println publishConfig
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode = VERSION_CODE
        versionName = getVersionName()
    }

    defaultPublishConfig publishConfig

    productFlavors {
        local
        production
    }

    sourceSets {
        main.setRoot('src/main')
        androidTest.setRoot('src/test')
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE' //jackson
        exclude 'META-INF/LICENSE' //jackson
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.apache.httpcomponents:httpclient-android:$HTTP_CLIENT_ANDROID"

    compile "org.springframework.android:spring-android-rest-template:$SPRING_ANDROID_VERSION"
    compile("org.springframework.android:spring-android-auth:$SPRING_ANDROID_VERSION") {
        exclude group: 'org.springframework.social'
        exclude group: 'org.springframework', module: 'spring-core'
    }
    compile("org.springframework.social:spring-social-core:$SPRING_SOCIAL_CORE_VERSION") {
        exclude group: 'org.springframework', module: 'spring-web'
    }
    compile "org.apache.commons:commons-lang3:$COMMONS_LANG_VERSION"

    compile "com.fasterxml.jackson.core:jackson-databind:$JACKSON_VERSION"
    compile "com.github.daddykotex:geojson-jackson-android:$ANDROID_GEOJSON_VERSION@aar"

    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile("org.springframework:spring-test:$SPRING_TEST_VERSION") {
        exclude module: "spring-core"
    }
    testCompile("org.mockito:mockito-core:$MOCKITO_CORE_VERSION") {
        exclude module: "hamcrest-core"
    }
    testCompile "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"
    testCompile("org.powermock:powermock-api-mockito:$POWERMOCK_VERSION") {
        exclude module: "mockito-all"
    }
}

//apply from: '../gradle/gradle-mvn-push.gradle'
